<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Milvonion.Application</name>
    </assembly>
    <members>
        <member name="T:Milvonion.Application.ApplicationAssembly">
            <summary>
            Static class for ease of assembly access.
            </summary>
        </member>
        <member name="F:Milvonion.Application.ApplicationAssembly.Assembly">
            <summary>
            Assembly instance.
            </summary>
        </member>
        <member name="T:Milvonion.Application.ApplicationServiceCollectionExtensions">
            <summary>
            Infrastructure service collection extensions.
            </summary>
        </member>
        <member name="M:Milvonion.Application.ApplicationServiceCollectionExtensions.AddApplicationServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly[])">
            <summary>
            Adds infrastructure services.
            </summary>
            <param name="services"></param>
            <param name="assemblies"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.ApplicationServiceCollectionExtensions.AddMediator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly[])">
            <summary>
            Adds mediatR services.
            </summary>
            <param name="services"></param>
            <param name="assemblies"></param>
            <returns></returns>
        </member>
        <member name="T:Milvonion.Application.Behaviours.DefaultDataValidator`1">
            <summary>
            Default data validator.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Behaviours.DefaultDataValidator`1.#ctor(System.Int32,System.Int32)">
            <summary>
            Default data validator.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Behaviours.DefaultDataValidator`1.Name">
            <inheritdoc/>
        </member>
        <member name="M:Milvonion.Application.Behaviours.DefaultDataValidator`1.GetDefaultMessageTemplate(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Milvonion.Application.Behaviours.DefaultDataValidator`1.IsValid(FluentValidation.ValidationContext{`0},System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Behaviours.NameDescriptionTranslationDtoValidator">
            <summary>
            Feature query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Behaviours.NameDescriptionTranslationDtoValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Behaviours.NameDescriptionTranslationDtoValidator"/>
        </member>
        <member name="T:Milvonion.Application.Behaviours.UpdateNameDescriptionTranslationDtoValidator">
            <summary>
            Feature query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Behaviours.UpdateNameDescriptionTranslationDtoValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Behaviours.UpdateNameDescriptionTranslationDtoValidator"/>
        </member>
        <member name="T:Milvonion.Application.Behaviours.RuleBuilderOptionsExtensions">
            <summary>
            Custom validators.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Behaviours.RuleBuilderOptionsExtensions.NotBeDefaultData``1(FluentValidation.IRuleBuilder{``0,System.Int32},System.Int32,System.Int32)">
            <summary>
            Checks whether the value is greater than or equal to 21.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ruleBuilder"></param>
            <param name="rangeMin"></param>
            <param name="rangeMax"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Behaviours.RuleBuilderOptionsExtensions.NotBeDefaultData``1(FluentValidation.IRuleBuilderOptions{``0,System.Int32},System.Int32,System.Int32)">
            <summary>
            Checks whether the value is greater than or equal to 21.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ruleBuilder"></param>
            <param name="rangeMin"></param>
            <param name="rangeMax"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Behaviours.RuleBuilderOptionsExtensions.Email``1(FluentValidation.IRuleBuilder{``0,System.String},Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <summary>
            Checks whether the value is valid email address.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ruleBuilder"></param>
            <param name="localizer"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Behaviours.RuleBuilderOptionsExtensions.Email``1(FluentValidation.IRuleBuilderOptions{``0,System.String},Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <summary>
            Checks whether the value is valid email address.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ruleBuilder"></param>
            <param name="localizer"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Behaviours.RuleBuilderOptionsExtensions.PhoneNumber``1(FluentValidation.IRuleBuilder{``0,System.String},Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <summary>
            Checks whether the value is valid phone number.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ruleBuilder"></param>
            <param name="localizer"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Behaviours.RuleBuilderOptionsExtensions.PhoneNumber``1(FluentValidation.IRuleBuilderOptions{``0,System.String},Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <summary>
            Checks whether the value is valid phone number.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ruleBuilder"></param>
            <param name="localizer"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Behaviours.RuleBuilderOptionsExtensions.UrlAddress``1(FluentValidation.IRuleBuilder{``0,System.String},Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <summary>
            Checks whether the value is valid website address.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ruleBuilder"></param>
            <param name="localizer"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Behaviours.RuleBuilderOptionsExtensions.UrlAddress``1(FluentValidation.IRuleBuilderOptions{``0,System.String},Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <summary>
            Checks whether the value is valid website address.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ruleBuilder"></param>
            <param name="localizer"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Behaviours.RuleBuilderOptionsExtensions.NotNullOrEmpty``1(FluentValidation.IRuleBuilder{``0,System.String},Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer,System.String)">
            <summary>
            Checks whether the value is valid website address.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ruleBuilder"></param>
            <param name="localizer"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Behaviours.RuleBuilderOptionsExtensions.NotNullOrEmpty``1(FluentValidation.IRuleBuilderOptions{``0,System.String},Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer,System.String)">
            <summary>
            Checks whether the value is valid website address.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ruleBuilder"></param>
            <param name="localizer"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Behaviours.RuleBuilderOptionsExtensions.NotNullOrEmpty``2(FluentValidation.IRuleBuilder{``0,``1},Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer,System.String)">
            <summary>
            Checks whether the value is valid website address.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="ruleBuilder"></param>
            <param name="localizer"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Behaviours.RuleBuilderOptionsExtensions.NotNullOrEmpty``2(FluentValidation.IRuleBuilderOptions{``0,``1},Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer,System.String)">
            <summary>
            Checks whether the value is valid website address.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="ruleBuilder"></param>
            <param name="localizer"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Milvonion.Application.Behaviours.ValidationBehaviorForResponse`2">
            <summary>
            Validation behavior for return value is <see cref="T:Milvasoft.Components.Rest.MilvaResponse.Response"/> typed requests.
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="validators"></param>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Milvonion.Application.Behaviours.ValidationBehaviorForResponse`2.#ctor(System.Collections.Generic.IEnumerable{FluentValidation.IValidator{`0}},System.IServiceProvider)">
            <summary>
            Validation behavior for return value is <see cref="T:Milvasoft.Components.Rest.MilvaResponse.Response"/> typed requests.
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="validators"></param>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Milvonion.Application.Behaviours.ValidationBehaviorForResponse`2.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Dtos.AccountDtos.AccountDetailDto">
            <summary>
            Data transfer object for account details.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AccountDtos.AccountDetailDto.UserName">
            <summary>
            Unique username of the user. 
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AccountDtos.AccountDetailDto.Email">
            <summary>
            Email of the user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AccountDtos.AccountDetailDto.Name">
            <summary>
            Name of the user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AccountDtos.AccountDetailDto.Surname">
            <summary>
            Surname of the user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AccountDtos.AccountDetailDto.Roles">
            <summary>
            Roles the user belongs to.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AccountDtos.AccountDetailDto.Projection">
            <summary>
            Projection expression for mapping User entity to AccountDetailDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.AccountDtos.LoginResponseDto">
            <summary>
            Response object for login operation.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AccountDtos.LoginResponseDto.UserType">
            <summary>
            Type of user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AccountDtos.LoginResponseDto.UserTypeDescription">
            <summary>
            User type description.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AccountDtos.LoginResponseDto.Token">
            <summary>
            Token information of the user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AccountDtos.LoginResponseDto.AccessibleMenuItems">
            <summary>
            Accessible menu items of the user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AccountDtos.LoginResponseDto.PageInformations">
            <summary>
            Page informations.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.ActivityLogDtos.ActivityLogListDto">
            <summary>
            Data transfer object for activity log list.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ActivityLogDtos.ActivityLogListDto.UserName">
            <summary>
            The username who performed the activity.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ActivityLogDtos.ActivityLogListDto.Activity">
            <summary>
            Activity type.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ActivityLogDtos.ActivityLogListDto.ActivityDescription">
            <summary>
            User activity description.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ActivityLogDtos.ActivityLogListDto.ActivityDate">
            <summary>
            Date and time of the activity.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ActivityLogDtos.ActivityLogListDto.Projection">
            <summary>
            Projection expression for mapping ActivityLog entity to ActivityLogListDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.AuditDto`1">
            <summary>
            Represents an audit data transfer object.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AuditDto`1.CreationDate">
            <summary>
            Gets or sets the creation date.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AuditDto`1.CreatorUserName">
            <summary>
            Gets or sets the username of the creator.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AuditDto`1.LastModificationDate">
            <summary>
            Gets or sets the last modification date.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.AuditDto`1.LastModifierUserName">
            <summary>
            Gets or sets the username of the last modifier.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Dtos.AuditDto`1.#ctor(Milvasoft.Core.EntityBases.Abstract.IAuditable{`0})">
            <summary>
            Assigns the values of the entity to the properties of the data transfer object.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDetailDto">
            <summary>
            Response of namespace detail.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDetailDto.Key">
            <summary>
            Key of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDetailDto.Value">
            <summary>
            Value of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDetailDto.LanguageId">
            <summary>
            LanguageId of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDetailDto.LanguageName">
            <summary>
            LanguageId of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDetailDto.NamespaceSlug">
            <summary>
            Slug for the namespace for search without join.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDetailDto.ResourceGroupSlug">
            <summary>
            Slug for the resource group for search without join.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDetailDto.KeyAlias">
            <summary>
            Key alias for search without join. A combination of namespace slug, resource group slug and key. etc. "namespaceSlug.resourceGroupSlug.key"
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDetailDto.Namespace">
            <summary>
            Id of the namespace this content belongs to.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDetailDto.ResourceGroup">
            <summary>
            Id of the namespace this content belongs to.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDetailDto.Medias">
            <summary>
            Id of the namespace this content belongs to.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDetailDto.AuditInfo">
            <summary>
            Information about record audit.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDetailDto.Projection">
            <summary>
            Projection expression for mapping Content entity to ContentDetailDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDto">
            <summary>
            Response of namespace detail.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDto.Key">
            <summary>
            Key of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDto.Value">
            <summary>
            Value of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDto.LanguageId">
            <summary>
            LanguageId of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDto.NamespaceSlug">
            <summary>
            Slug for the namespace for search without join.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDto.ResourceGroupSlug">
            <summary>
            Slug for the resource group for search without join.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDto.KeyAlias">
            <summary>
            Key alias for search without join. A combination of namespace slug, resource group slug and key. etc. "namespaceSlug.resourceGroupSlug.key"
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDto.Medias">
            <summary>
            Content related medias.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentDto.Projection">
            <summary>
            Projection expression for mapping Content entity to ContentDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentListDto">
            <summary>
            Response of namespace detail.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentListDto.KeyAlias">
            <summary>
            Key alias for search without join. A combination of namespace slug, resource group slug and key. etc. "namespaceSlug.resourceGroupSlug.key"
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentListDto.Key">
            <summary>
            Key of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentListDto.Value">
            <summary>
            Value of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentListDto.LanguageId">
            <summary>
            LanguageId of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentListDto.LanguageName">
            <summary>
            LanguageId of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentListDto.NamespaceSlug">
            <summary>
            Slug for the namespace for search without join.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentListDto.ResourceGroupSlug">
            <summary>
            Slug for the resource group for search without join.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentListDto.Namespace">
            <summary>
            Id of the namespace this content belongs to.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentListDto.ResourceGroup">
            <summary>
            Id of the namespace this content belongs to.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.ContentListDto.Projection">
            <summary>
            Projection expression for mapping Content entity to ContentListDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.CreateContentDto">
            <summary>
            Create content model.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.CreateContentDto.Key">
            <summary>
            Key of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.CreateContentDto.Value">
            <summary>
            Value of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.CreateContentDto.LanguageId">
            <summary>
            LanguageId of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.CreateContentDto.ResourceGroupId">
            <summary>
            Id of the namespace this content belongs to.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.CreateContentDto.Medias">
            <summary>
            Media files if exists.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.GroupedContentListDto">
            <summary>
            Content list grouped by key.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.GroupedContentListDto.IdList">
            <summary>
            Grouped contents id list.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.GroupedContentListDto.KeyAlias">
            <summary>
            Key alias for search without join. A combination of namespace slug, resource group slug and key. etc. "namespaceSlug.resourceGroupSlug.key"
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.GroupedContentListDto.Key">
            <summary>
            Key of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.GroupedContentListDto.NamespaceSlug">
            <summary>
            Slug for the namespace for search without join.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.GroupedContentListDto.ResourceGroupSlug">
            <summary>
            Slug for the resource group for search without join.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.GroupedContentListDto.Namespace">
            <summary>
            Id of the namespace this content belongs to.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.GroupedContentListDto.ResourceGroup">
            <summary>
            Id of the namespace this content belongs to.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.GroupedContentListDto.Projection">
            <summary>
            Projection expression for mapping Content entity to ContentListDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.MediaDto">
            <summary>
            Media model.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.MediaDto.Value">
            <summary>
            Media value.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.MediaDto.MediaAsBase64">
            <summary>
            Media as base64 string.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.MediaDto.Type">
            <summary>
            Media type. etc. "image", "video", "audio"
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.UpsertMediaDto">
            <summary>
            Create content model.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.UpsertMediaDto.MediaAsBase64">
            <summary>
            Media of the content as base64 string.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.UpsertMediaDto.Media">
            <summary>
            Media of the content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ContentDtos.UpsertMediaDto.Type">
            <summary>
            Media type. etc. "image", "video", "audio"
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.ContentManagementDtos.LanguageDtos.LanguageDto">
            <summary>
            Language model.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.LanguageDtos.LanguageDto.Id">
            <summary>
            Language id.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.LanguageDtos.LanguageDto.Name">
            <summary>
            Name of the language.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.LanguageDtos.LanguageDto.Code">
            <summary>
            Iso code of the language.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.LanguageDtos.LanguageDto.Supported">
            <summary>
            Determines whether the language is supported or not.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.LanguageDtos.LanguageDto.SupportedDescription">
            <summary>
            Determines whether language is supported or not.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.LanguageDtos.LanguageDto.IsDefault">
            <summary>
            Determines whether the language is default or not.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.LanguageDtos.LanguageDto.IsDefaultDescription">
            <summary>
            Determines whether language is default or not.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.LanguageDtos.LanguageDto.Projection">
            <summary>
            Projection expression for mapping Language entity to LanguageDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.ContentManagementDtos.NamespaceDtos.NamespaceDetailDto">
            <summary>
            Response of namespace detail.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.NamespaceDtos.NamespaceDetailDto.Slug">
            <summary>
            Unique slug of namespace.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.NamespaceDtos.NamespaceDetailDto.Name">
            <summary>
            Name of namespace.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.NamespaceDtos.NamespaceDetailDto.Description">
            <summary>
            Description of namespace.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.NamespaceDtos.NamespaceDetailDto.AuditInfo">
            <summary>
            Information about record audit.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.NamespaceDtos.NamespaceDetailDto.Projection">
            <summary>
            Projection expression for mapping Namespace entity to GetNamespaceDetailResponse.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.ContentManagementDtos.NamespaceDtos.NamespaceListDto">
            <summary>
            Response of namespace detail.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.NamespaceDtos.NamespaceListDto.Slug">
            <summary>
            Unique slug of namespace.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.NamespaceDtos.NamespaceListDto.Name">
            <summary>
            Name of namespace.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.NamespaceDtos.NamespaceListDto.Description">
            <summary>
            Description of namespace.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.NamespaceDtos.NamespaceListDto.Projection">
            <summary>
            Projection expression for mapping Namespace entity to GetNamespaceListResponse.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.ContentManagementDtos.ResourceGroupDtos.ResourceGroupDetailDto">
            <summary>
            Response of namespace detail.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ResourceGroupDtos.ResourceGroupDetailDto.Slug">
            <summary>
            Unique slug of namespace.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ResourceGroupDtos.ResourceGroupDetailDto.Name">
            <summary>
            Name of namespace.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ResourceGroupDtos.ResourceGroupDetailDto.Description">
            <summary>
            Description of namespace.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ResourceGroupDtos.ResourceGroupDetailDto.Namespace">
            <summary>
            Description of namespace.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ResourceGroupDtos.ResourceGroupDetailDto.AuditInfo">
            <summary>
            Information about record audit.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ResourceGroupDtos.ResourceGroupDetailDto.Projection">
            <summary>
            Projection expression for mapping ResourceGroup entity to ResourceGroupDetailDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.ContentManagementDtos.ResourceGroupDtos.ResourceGroupListDto">
            <summary>
            Response of resource group detail.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ResourceGroupDtos.ResourceGroupListDto.Slug">
            <summary>
            Unique slug of resource group.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ResourceGroupDtos.ResourceGroupListDto.Name">
            <summary>
            Name of resource group.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ResourceGroupDtos.ResourceGroupListDto.Description">
            <summary>
            Description of resource group.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ResourceGroupDtos.ResourceGroupListDto.Namespace">
            <summary>
            Description of namespace.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ContentManagementDtos.ResourceGroupDtos.ResourceGroupListDto.Projection">
            <summary>
            Projection expression for mapping ResourceGroup entity to ResourceGroupListDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.EnumLookupModel">
            <summary>
            Model for enum lookups.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.EnumLookupModel.Value">
            <summary>
            Enum value.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.EnumLookupModel.Name">
            <summary>
            Enum localized name.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.ExportDtos.ExportType">
            <summary>
            Export types.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Dtos.ExportDtos.ExportType.User">
            <summary>
            User list export.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.ExportDtos.ExportRequest">
            <summary>
            Export request.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ExportDtos.ExportRequest.ExportType">
            <summary>
            Determines whether which data to export.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ExportDtos.ExportRequest.ListRequest">
            <summary>
            Export specifications.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Dtos.ExportDtos.ExportRequest.GetQueryType">
            <summary>
            Gets query type according to export type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Dtos.ExportDtos.ExportRequest.GetRequiredPermissions">
            <summary>
            Gets required permissions according to export type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Dtos.ExportDtos.ExportRequest.IsValid">
            <summary>
            Validates request.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Milvonion.Application.Dtos.ExportDtos.ExportResult">
            <summary>
            Data transfer object for export.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ExportDtos.ExportResult.FileStream">
            <summary>
            File stream.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ExportDtos.ExportResult.MimeType">
            <summary>
            File extension.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.ExportDtos.ExportResult.FileName">
            <summary>
            File extension.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.MilvonionBaseDto`1">
            <summary>
            App pool base dto for attribute usage.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.MilvonionBaseDto`1.Id">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Dtos.NameIntNavigationDto">
            <summary>
            It can be used to obtain Id-Name pair information for any domain.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.NameIntNavigationDto.Name">
            <summary>
            Name of related domain.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.PermissionDtos.PermissionListDto">
            <summary>
            Data transfer object for permission list.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.PermissionDtos.PermissionListDto.Name">
            <summary>
            Permission name. (e.g. List, Update)
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.PermissionDtos.PermissionListDto.Description">
            <summary>
            Permission description. (e.g. User list permission. ) 
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.PermissionDtos.PermissionListDto.PermissionGroup">
            <summary>
            Permission group. (e.g. UserManagement) 
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.PermissionDtos.PermissionListDto.PermissionGroupDescription">
            <summary>
            Permission group description. (e.g. User management permissions)
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.PermissionDtos.PermissionListDto.Projection">
            <summary>
            Projection expression for mapping Permission entity to PermissionListDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.RoleDtos.RoleDetailDto">
            <summary>
            Data transfer object for role details.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.RoleDtos.RoleDetailDto.Name">
            <summary>
            Name of role. (e.g. Viewer, Editor)
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.RoleDtos.RoleDetailDto.Users">
            <summary>
            Users belonging to the role.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.RoleDtos.RoleDetailDto.Permissions">
            <summary>
            Permissions belonging to the role.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.RoleDtos.RoleDetailDto.AuditInfo">
            <summary>
            Information about record audit.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.RoleDtos.RoleDetailDto.Projection">
            <summary>
            Projection expression for mapping Role entity to RoleDetailDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.RoleDtos.RoleListDto">
            <summary>
            Data transfer object for role list.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.RoleDtos.RoleListDto.Name">
            <summary>
            Name of the role.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.RoleDtos.RoleListDto.Projection">
            <summary>
            Projection expression for mapping Role entity to RoleListDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.TranslationDtos.NameDescriptionTranslationDto">
            <summary>
            Common translation dto.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.TranslationDtos.NameDescriptionTranslationDto.Name">
            <summary>
            Translation of name.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.TranslationDtos.NameDescriptionTranslationDto.Description">
            <summary>
            Translation of description.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.TranslationDtos.NameDescriptionTranslationDto.LanguageId">
            <summary>
            Id of language.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.UIDtos.LocalizedContentDto">
            <summary>
            Represents a localized content data transfer object.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.LocalizedContentDto.Key">
            <summary>
            Gets or sets the key of the localized content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.LocalizedContentDto.Value">
            <summary>
            Gets or sets the value of the localized content.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.UIDtos.MenuItemDtos.MenuGroupDto">
            <summary>
            Data transfer object for user list.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.MenuItemDtos.MenuGroupDto.Name">
            <summary>
            Name of related domain.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.MenuItemDtos.MenuGroupDto.Order">
            <summary>
            Order of menu item.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.UIDtos.MenuItemDtos.MenuItemDto">
            <summary>
            Data transfer object for user list.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.MenuItemDtos.MenuItemDto.Name">
            <summary>
            Name of menu item.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.MenuItemDtos.MenuItemDto.Url">
            <summary>
            Frontend page url for navigate to on click.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.MenuItemDtos.MenuItemDto.Order">
            <summary>
            Order of menu item.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.MenuItemDtos.MenuItemDto.PageName">
            <summary>
            Frontend page name for navigate to on click.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.MenuItemDtos.MenuItemDto.ParentId">
            <summary>
            Related parent menu item id.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.MenuItemDtos.MenuItemDto.Group">
            <summary>
            Menu item group information.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.MenuItemDtos.MenuItemDto.Childrens">
            <summary>
            Children items of this menu items.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Dtos.UIDtos.MenuItemDtos.MenuItemDto.Projection(Milvasoft.Core.MultiLanguage.Manager.IMultiLanguageManager)">
            <summary>
            Projection expression for mapping MenuItem entity to MenuItem.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.UIDtos.PageDtos.PageActionDto">
            <summary>
            Page action information.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageActionDto.Title">
            <summary>
            Action localized title.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageActionDto.ActionName">
            <summary>
            Frontend action or page name.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageActionDto.Url">
            <summary>
            Url of action.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageActionDto.IsAction">
            <summary>
            If an action will be taken on the page, it takes the value true. If a redirection will be made to another page on the page, it takes the value false.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Dtos.UIDtos.PageDtos.PageActionDto.Projection(Milvasoft.Core.MultiLanguage.Manager.IMultiLanguageManager)">
            <summary>
            Projection expression for mapping PageAction entity to PageActionDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.UIDtos.PageDtos.PageDto">
            <summary>
            Page information.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageDto.Name">
            <summary>
            Frontend page name.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageDto.LocalizedName">
            <summary>
            Frontend page localized name.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageDto.HasCreate">
            <summary>
            Determines whether the page has create action or not.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageDto.HasDetail">
            <summary>
            Determines whether the page has detail action or not.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageDto.HasEdit">
            <summary>
            Determines whether the page has edit action or not.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageDto.HasDelete">
            <summary>
            Determines whether the page has delete action or not.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageDto.UserCanCreate">
            <summary>
            Determines whether the user can create a new record in this page.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageDto.UserCanDetail">
            <summary>
            Determines whether the user can access a record detail in this page.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageDto.UserCanEdit">
            <summary>
            Determines whether the user can edit a record in this page.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageDto.UserCanDelete">
            <summary>
            Determines whether the user can delete a record in this page.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UIDtos.PageDtos.PageDto.AdditionalActions">
            <summary>
            Navigation property of additional page action relation.    
            </summary>
        </member>
        <member name="M:Milvonion.Application.Dtos.UIDtos.PageDtos.PageDto.Projection(Milvasoft.Core.MultiLanguage.Manager.IMultiLanguageManager)">
            <summary>
            Projection expression for mapping MenuItem entity to MenuItem.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.UserDtos.UserDetailDto">
            <summary>
            Data transfer object for user details.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UserDtos.UserDetailDto.UserName">
            <summary>
            Unique username of the user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UserDtos.UserDetailDto.Email">
            <summary>
            Email of the user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UserDtos.UserDetailDto.Name">
            <summary>
            Name of the user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UserDtos.UserDetailDto.Surname">
            <summary>
            Surname of the user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UserDtos.UserDetailDto.Roles">
            <summary>
            Information about the roles the user is assigned to.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UserDtos.UserDetailDto.AuditInfo">
            <summary>
            Information about record audit.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UserDtos.UserDetailDto.Projection">
            <summary>
            Projection expression for mapping User entity to UserDetailDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Dtos.UserDtos.UserListDto">
            <summary>
            Data transfer object for user list.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UserDtos.UserListDto.UserName">
            <summary>
            Unique username of user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UserDtos.UserListDto.Email">
            <summary>
            Email of user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UserDtos.UserListDto.Name">
            <summary>
            Name of user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UserDtos.UserListDto.Surname">
            <summary>
            Surname of user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Dtos.UserDtos.UserListDto.Projection">
            <summary>
            Projection expression for mapping User entity to UserListDto.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Account.AccountDetail.AccountDetailQuery">
            <summary>
            Data transfer object for account details.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Account.AccountDetail.AccountDetailQuery.UserId">
            <summary>
            The user Id whose account details you want to access.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Account.AccountDetail.AccountDetailQueryHandler">
            <summary>
            Handles the query for retrieving the account details.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.AccountDetail.AccountDetailQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.User},Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Handles the query for retrieving the account details.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.AccountDetail.AccountDetailQueryHandler.Handle(Milvonion.Application.Features.Account.AccountDetail.AccountDetailQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Account.AccountDetail.AccountDetailQueryValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.AccountDetail.AccountDetailQueryValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Account.AccountDetail.AccountDetailQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Account.ChangePassword.ChangePasswordCommand">
            <summary>
            Data transfer object for password change operation.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Account.ChangePassword.ChangePasswordCommand.UserName">
            <summary>
            Username whose password will be changed
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Account.ChangePassword.ChangePasswordCommand.OldPassword">
            <summary>
            Old password of account.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Account.ChangePassword.ChangePasswordCommand.NewPassword">
            <summary>
            New password.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Account.ChangePassword.ChangePasswordCommandHandler">
            <summary>
            Handles the change password command.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.ChangePassword.ChangePasswordCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.User},Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.UserSession},Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.UserSessionHistory},Milvasoft.Identity.Abstract.IMilvaUserManager{Milvonion.Domain.User,System.Int32},Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Handles the change password command.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.ChangePassword.ChangePasswordCommandHandler.Handle(Milvonion.Application.Features.Account.ChangePassword.ChangePasswordCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Account.ChangePassword.ChangePasswordCommandValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.ChangePassword.ChangePasswordCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Account.ChangePassword.ChangePasswordCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Account.Login.LoginCommand">
            <summary>
            Data transfer object for login operation.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Account.Login.LoginCommand.UserName">
            <summary>
            Username to log in.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Account.Login.LoginCommand.Password">
            <summary>
            Password to log in.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Account.Login.LoginCommand.DeviceId">
            <summary>
            Unique Id of the device being logged in. Can be MacAddress or something.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Account.Login.LoginCommandHandler">
            <summary>
            Handles the login command and performs the necessary operations.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.Login.LoginCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.User},Milvasoft.Identity.Abstract.IMilvaUserManager{Milvonion.Domain.User,System.Int32},Milvonion.Application.Interfaces.IAccountManager,Milvonion.Application.Interfaces.IUIService,Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer,Milvasoft.Identity.Concrete.Options.MilvaIdentityOptions)">
            <summary>
            Handles the login command and performs the necessary operations.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.Login.LoginCommandHandler.Handle(Milvonion.Application.Features.Account.Login.LoginCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Account.Login.LoginCommandValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.Login.LoginCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Account.Login.LoginCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Account.Logout.LogoutCommand">
            <summary>
            Data transfer object for logout operation.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Account.Logout.LogoutCommand.UserName">
            <summary>
            Username to logged out.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Account.Logout.LogoutCommand.DeviceId">
            <summary>
            Unique Id of the device being logged out. Can be MacAddress or something.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Account.Logout.LogoutCommandHandler">
            <summary>
            Handles the LogoutCommand and performs the logout operation.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.Logout.LogoutCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.UserSession},Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.UserSessionHistory},Milvonion.Application.Interfaces.IAccountManager,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Handles the LogoutCommand and performs the logout operation.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.Logout.LogoutCommandHandler.Handle(Milvonion.Application.Features.Account.Logout.LogoutCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Account.Logout.LogoutCommandValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.Logout.LogoutCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Account.Logout.LogoutCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Account.RefreshLogin.RefreshLoginCommand">
            <summary>
            Data transfer object for refresh login operation.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Account.RefreshLogin.RefreshLoginCommand.UserName">
            <summary>
            Username to log in.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Account.RefreshLogin.RefreshLoginCommand.DeviceId">
            <summary>
            Unique Id of the device being logged in. Can be MacAddress or something.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Account.RefreshLogin.RefreshLoginCommand.RefreshToken">
            <summary>
            Refresh token received during login.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Account.RefreshLogin.RefreshLoginCommandHandler">
            <summary>
            Handles the RefreshLoginCommand and refreshes the user's login token.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.RefreshLogin.RefreshLoginCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.User},Milvonion.Application.Interfaces.IAccountManager,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Handles the RefreshLoginCommand and refreshes the user's login token.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.RefreshLogin.RefreshLoginCommandHandler.Handle(Milvonion.Application.Features.Account.RefreshLogin.RefreshLoginCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Account.RefreshLogin.RefreshLoginCommandValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Account.RefreshLogin.RefreshLoginCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Account.Logout.LogoutCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ActivityLogs.GetActivityLogList.GetActivityLogListQuery">
            <summary>
            Data transfer object for user activity log list.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ActivityLogs.GetActivityLogList.GetActivityLogListQueryHandler">
            <summary>
            Get all activity logs.
            </summary>
            <param name="activityLogRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ActivityLogs.GetActivityLogList.GetActivityLogListQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ActivityLog})">
            <summary>
            Get all activity logs.
            </summary>
            <param name="activityLogRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ActivityLogs.GetActivityLogList.GetActivityLogListQueryHandler.Handle(Milvonion.Application.Features.ActivityLogs.GetActivityLogList.GetActivityLogListQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ActivityLogs.GetActivityLogList.GetActivityLogListQueryValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ActivityLogs.GetActivityLogList.GetActivityLogListQueryValidator.#ctor">
            <inheritdoc cref="T:Milvonion.Application.Features.ActivityLogs.GetActivityLogList.GetActivityLogListQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.CreateBulkContentCommand">
            <summary>
            Data transfer object for contents creation.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.CreateBulkContentCommand.Contents">
            <summary>
            List of content creation objects.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.CreateBulkContentCommandHandler">
            <summary>
            Handles the creation of the content.
            </summary>
            <param name="ContentRepository"></param>
            <param name="ResourceGroupRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.CreateBulkContentCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.Content},Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.ResourceGroup})">
            <summary>
            Handles the creation of the content.
            </summary>
            <param name="ContentRepository"></param>
            <param name="ResourceGroupRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.CreateBulkContentCommandHandler.ContentRepository">
            <summary></summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.CreateBulkContentCommandHandler.ResourceGroupRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.CreateBulkContentCommandHandler.Handle(Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.CreateBulkContentCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.CreateBulkContentCommandValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.CreateBulkContentCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Contents.CreateContent.CreateContentCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.CreateContentDtoValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.CreateContentDtoValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.CreateContentDtoValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.UpsertMediaValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.UpsertMediaValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Contents.CreateBulkContent.UpsertMediaValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.CreateContent.CreateContentCommand">
            <summary>
            Data transfer object for content creation.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.CreateContent.CreateContentCommandHandler">
            <summary>
            Handles the creation of the content.
            </summary>
            <param name="ContentRepository"></param>
            <param name="ResourceGroupRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.CreateContent.CreateContentCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.Content},Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.ResourceGroup})">
            <summary>
            Handles the creation of the content.
            </summary>
            <param name="ContentRepository"></param>
            <param name="ResourceGroupRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.CreateContent.CreateContentCommandHandler.ContentRepository">
            <summary></summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.CreateContent.CreateContentCommandHandler.ResourceGroupRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.CreateContent.CreateContentCommandHandler.Handle(Milvonion.Application.Features.ContentManagement.Contents.CreateContent.CreateContentCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.CreateContent.CreateContentCommandValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.CreateContent.CreateContentCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Contents.CreateContent.CreateContentCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.DeleteContents.DeleteContentsCommand">
            <summary>
            Data transfer object for contents deletion.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.DeleteContents.DeleteContentsCommand.ContentIdList">
            <summary>
            Id list of the contents to be deleted.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.DeleteContents.DeleteContentsCommandHandler">
            <summary>
            Handles the deletion of the content.
            </summary>
            <param name="ContentRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.DeleteContents.DeleteContentsCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.Content})">
            <summary>
            Handles the deletion of the content.
            </summary>
            <param name="ContentRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.DeleteContents.DeleteContentsCommandHandler.ContentRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.DeleteContents.DeleteContentsCommandHandler.Handle(Milvonion.Application.Features.ContentManagement.Contents.DeleteContents.DeleteContentsCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.DeleteContents.DeleteContentsCommandValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.DeleteContents.DeleteContentsCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Contents.DeleteContents.DeleteContentsCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.GetContentDetail.GetContentDetailQuery">
            <summary>
            Data transfer object for content details.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.GetContentDetail.GetContentDetailQuery.ContentId">
            <summary>
            Resource group id to access details.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.GetContentDetail.GetContentDetailQueryHandler">
            <summary>
            Handles the content detail operation.
            </summary>
            <param name="resourceGroupRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.GetContentDetail.GetContentDetailQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.Content})">
            <summary>
            Handles the content detail operation.
            </summary>
            <param name="resourceGroupRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.GetContentDetail.GetContentDetailQueryHandler.Handle(Milvonion.Application.Features.ContentManagement.Contents.GetContentDetail.GetContentDetailQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.GetContentDetail.GetContentDetailQueryValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.GetContentDetail.GetContentDetailQueryValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Contents.GetContentDetail.GetContentDetailQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.GetContentList.GetContentListQuery">
            <summary>
            Data transfer object for content list.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.GetContentList.GetContentListQueryHandler">
            <summary>
            Handles the content list operation.
            </summary>
            <param name="resourceGroupRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.GetContentList.GetContentListQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.Content})">
            <summary>
            Handles the content list operation.
            </summary>
            <param name="resourceGroupRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.GetContentList.GetContentListQueryHandler.Handle(Milvonion.Application.Features.ContentManagement.Contents.GetContentList.GetContentListQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.GetContentList.GetContentListQueryValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.GetContentList.GetContentListQueryValidator.#ctor">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Contents.GetContentList.GetContentListQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.GetContent.GetContentQuery">
            <summary>
            Data transfer object for content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.GetContent.GetContentQuery.Query">
            <summary>
            Query for content list.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.GetContent.GetContentQuery.NamespaceSlug">
            <summary>
            Namespace of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.GetContent.GetContentQuery.QueryType">
            <summary>
            Query type for content list.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.GetContent.ContentQueryType">
            <summary>
            Query type for content list.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Features.ContentManagement.Contents.GetContent.ContentQueryType.Key">
            <summary>
            Query by key.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Features.ContentManagement.Contents.GetContent.ContentQueryType.ResourceGroup">
            <summary>
            Query by resource group.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Features.ContentManagement.Contents.GetContent.ContentQueryType.Namespace">
            <summary>
            Query by namespace.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.GetContent.GetContentQueryHandler">
            <summary>
            Handles the content list operation.
            </summary>
            <param name="resourceGroupRepository"></param>
            <param name="multiLanguageManager"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.GetContent.GetContentQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.Content},Milvasoft.Core.MultiLanguage.Manager.IMultiLanguageManager)">
            <summary>
            Handles the content list operation.
            </summary>
            <param name="resourceGroupRepository"></param>
            <param name="multiLanguageManager"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.GetContent.GetContentQueryHandler.Handle(Milvonion.Application.Features.ContentManagement.Contents.GetContent.GetContentQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.GetContent.GetContentQueryValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.GetContent.GetContentQueryValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Contents.GetContent.GetContentQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.GetGroupedContentList.GetGroupedContentListQuery">
            <summary>
            Data transfer object for content list.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.GetGroupedContentList.GetGroupedContentListQueryHandler">
            <summary>
            Handles the content list operation.
            </summary>
            <param name="dbContextAccessor"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.GetGroupedContentList.GetGroupedContentListQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionDbContextAccessor)">
            <summary>
            Handles the content list operation.
            </summary>
            <param name="dbContextAccessor"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.GetGroupedContentList.GetGroupedContentListQueryHandler.Handle(Milvonion.Application.Features.ContentManagement.Contents.GetGroupedContentList.GetGroupedContentListQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.GetGroupedContentList.GetGroupedContentListQueryValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.GetGroupedContentList.GetGroupedContentListQueryValidator.#ctor">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Contents.GetGroupedContentList.GetGroupedContentListQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.UpdateContent.UpdateContentCommand">
            <summary>
            Data transfer object for content update.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.UpdateContent.UpdateContentCommand.Value">
            <summary>
            Name of content.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.UpdateContent.UpdateContentCommand.Medias">
            <summary>
            Medias of content.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.UpdateContent.UpdateContentCommandHandler">
            <summary>
            Handles the update of the content.
            </summary>
            <param name="ContentRepository"></param>
            <param name="MediaRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.UpdateContent.UpdateContentCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.Content},Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.Media})">
            <summary>
            Handles the update of the content.
            </summary>
            <param name="ContentRepository"></param>
            <param name="MediaRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.UpdateContent.UpdateContentCommandHandler.ContentRepository">
            <summary></summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Contents.UpdateContent.UpdateContentCommandHandler.MediaRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.UpdateContent.UpdateContentCommandHandler.Handle(Milvonion.Application.Features.ContentManagement.Contents.UpdateContent.UpdateContentCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Contents.UpdateContent.UpdateContentCommandValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Contents.UpdateContent.UpdateContentCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Contents.UpdateContent.UpdateContentCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.CreateNamespace.CreateNamespaceCommand">
            <summary>
            Data transfer object for namespace creation.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Namespaces.CreateNamespace.CreateNamespaceCommand.Name">
            <summary>
            Name of namespace.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Namespaces.CreateNamespace.CreateNamespaceCommand.Description">
            <summary>
            Description of namespace.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.CreateNamespace.CreateNamespaceCommandHandler">
            <summary>
            Handles the creation of the contentNamespace.
            </summary>
            <param name="NamespaceRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.CreateNamespace.CreateNamespaceCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.Namespace})">
            <summary>
            Handles the creation of the contentNamespace.
            </summary>
            <param name="NamespaceRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Namespaces.CreateNamespace.CreateNamespaceCommandHandler.NamespaceRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.CreateNamespace.CreateNamespaceCommandHandler.Handle(Milvonion.Application.Features.ContentManagement.Namespaces.CreateNamespace.CreateNamespaceCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.CreateNamespace.CreateNamespaceCommandValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.CreateNamespace.CreateNamespaceCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Namespaces.CreateNamespace.CreateNamespaceCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.DeleteNamespace.DeleteNamespaceCommand">
            <summary>
            Data transfer object for contentNamespace deletion.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Namespaces.DeleteNamespace.DeleteNamespaceCommand.NamespaceId">
            <summary>
            Id of the contentNamespace to be deleted.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.DeleteNamespace.DeleteNamespaceCommandHandler">
            <summary>
            Handles the deletion of the contentNamespace.
            </summary>
            <param name="NamespaceRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.DeleteNamespace.DeleteNamespaceCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.Namespace})">
            <summary>
            Handles the deletion of the contentNamespace.
            </summary>
            <param name="NamespaceRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Namespaces.DeleteNamespace.DeleteNamespaceCommandHandler.NamespaceRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.DeleteNamespace.DeleteNamespaceCommandHandler.Handle(Milvonion.Application.Features.ContentManagement.Namespaces.DeleteNamespace.DeleteNamespaceCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.DeleteNamespace.DeleteNamespaceCommandValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.DeleteNamespace.DeleteNamespaceCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Namespaces.DeleteNamespace.DeleteNamespaceCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceDetail.GetNamespaceDetailQuery">
            <summary>
            Data transfer object for contentNamespace details.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceDetail.GetNamespaceDetailQuery.NamespaceId">
            <summary>
            Namespace id to access details.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceDetail.GetNamespaceDetailQueryHandler">
            <summary>
            Handles the contentNamespace detail operation.
            </summary>
            <param name="contentNamespaceRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceDetail.GetNamespaceDetailQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.Namespace})">
            <summary>
            Handles the contentNamespace detail operation.
            </summary>
            <param name="contentNamespaceRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceDetail.GetNamespaceDetailQueryHandler.Handle(Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceDetail.GetNamespaceDetailQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceDetail.GetNamespaceDetailQueryValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceDetail.GetNamespaceDetailQueryValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceDetail.GetNamespaceDetailQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceList.GetNamespaceListQuery">
            <summary>
            Data transfer object for contentNamespace list.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceList.GetNamespaceListQueryHandler">
            <summary>
            Handles the contentNamespace list operation.
            </summary>
            <param name="contentNamespaceRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceList.GetNamespaceListQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.Namespace})">
            <summary>
            Handles the contentNamespace list operation.
            </summary>
            <param name="contentNamespaceRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceList.GetNamespaceListQueryHandler.Handle(Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceList.GetNamespaceListQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceList.GetNamespaceListQueryValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceList.GetNamespaceListQueryValidator.#ctor">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Namespaces.GetNamespaceList.GetNamespaceListQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.UpdateNamespace.UpdateNamespaceCommand">
            <summary>
            Data transfer object for namespace update.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Namespaces.UpdateNamespace.UpdateNamespaceCommand.Name">
            <summary>
            Name of namespace.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Namespaces.UpdateNamespace.UpdateNamespaceCommand.Description">
            <summary>
            Description of namespace.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.UpdateNamespace.UpdateNamespaceCommandHandler">
            <summary>
            Handles the update of the contentNamespace.
            </summary>
            <param name="NamespaceRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.UpdateNamespace.UpdateNamespaceCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.Namespace})">
            <summary>
            Handles the update of the contentNamespace.
            </summary>
            <param name="NamespaceRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.Namespaces.UpdateNamespace.UpdateNamespaceCommandHandler.NamespaceRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.UpdateNamespace.UpdateNamespaceCommandHandler.Handle(Milvonion.Application.Features.ContentManagement.Namespaces.UpdateNamespace.UpdateNamespaceCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.Namespaces.UpdateNamespace.UpdateNamespaceCommandValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.Namespaces.UpdateNamespace.UpdateNamespaceCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.Namespaces.UpdateNamespace.UpdateNamespaceCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.CreateResourceGroup.CreateResourceGroupCommand">
            <summary>
            Data transfer object for resource group creation.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.ResourceGroups.CreateResourceGroup.CreateResourceGroupCommand.NamespaceId">
            <summary>
            Belongs to which namespace.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.ResourceGroups.CreateResourceGroup.CreateResourceGroupCommand.Name">
            <summary>
            Name of resource group.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.ResourceGroups.CreateResourceGroup.CreateResourceGroupCommand.Description">
            <summary>
            Description of resource group.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.CreateResourceGroup.CreateResourceGroupCommandHandler">
            <summary>
            Handles the creation of the resource group.
            </summary>
            <param name="ResourceGroupRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.CreateResourceGroup.CreateResourceGroupCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.ResourceGroup})">
            <summary>
            Handles the creation of the resource group.
            </summary>
            <param name="ResourceGroupRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.ResourceGroups.CreateResourceGroup.CreateResourceGroupCommandHandler.ResourceGroupRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.CreateResourceGroup.CreateResourceGroupCommandHandler.Handle(Milvonion.Application.Features.ContentManagement.ResourceGroups.CreateResourceGroup.CreateResourceGroupCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.CreateResourceGroup.CreateResourceGroupCommandValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.CreateResourceGroup.CreateResourceGroupCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.CreateResourceGroup.CreateResourceGroupCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.DeleteResourceGroup.DeleteResourceGroupCommand">
            <summary>
            Data transfer object for resource group deletion.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.ResourceGroups.DeleteResourceGroup.DeleteResourceGroupCommand.ResourceGroupId">
            <summary>
            Id of the resource group to be deleted.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.DeleteResourceGroup.DeleteResourceGroupCommandHandler">
            <summary>
            Handles the deletion of the resource group.
            </summary>
            <param name="ResourceGroupRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.DeleteResourceGroup.DeleteResourceGroupCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.ResourceGroup})">
            <summary>
            Handles the deletion of the resource group.
            </summary>
            <param name="ResourceGroupRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.ResourceGroups.DeleteResourceGroup.DeleteResourceGroupCommandHandler.ResourceGroupRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.DeleteResourceGroup.DeleteResourceGroupCommandHandler.Handle(Milvonion.Application.Features.ContentManagement.ResourceGroups.DeleteResourceGroup.DeleteResourceGroupCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.DeleteResourceGroup.DeleteResourceGroupCommandValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.DeleteResourceGroup.DeleteResourceGroupCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.DeleteResourceGroup.DeleteResourceGroupCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupDetail.GetResourceGroupDetailQuery">
            <summary>
            Data transfer object for resource group details.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupDetail.GetResourceGroupDetailQuery.ResourceGroupId">
            <summary>
            Resource group id to access details.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupDetail.GetResourceGroupDetailQueryHandler">
            <summary>
            Handles the resource group detail operation.
            </summary>
            <param name="resourceGroupRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupDetail.GetResourceGroupDetailQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.ResourceGroup})">
            <summary>
            Handles the resource group detail operation.
            </summary>
            <param name="resourceGroupRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupDetail.GetResourceGroupDetailQueryHandler.Handle(Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupDetail.GetResourceGroupDetailQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupDetail.GetResourceGroupDetailQueryValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupDetail.GetResourceGroupDetailQueryValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupDetail.GetResourceGroupDetailQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupList.GetResourceGroupListQuery">
            <summary>
            Data transfer object for resource group list.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupList.GetResourceGroupListQueryHandler">
            <summary>
            Handles the resource group list operation.
            </summary>
            <param name="resourceGroupRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupList.GetResourceGroupListQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.ResourceGroup})">
            <summary>
            Handles the resource group list operation.
            </summary>
            <param name="resourceGroupRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupList.GetResourceGroupListQueryHandler.Handle(Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupList.GetResourceGroupListQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupList.GetResourceGroupListQueryValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupList.GetResourceGroupListQueryValidator.#ctor">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.GetResourceGroupList.GetResourceGroupListQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.UpdateResourceGroup.UpdateResourceGroupCommand">
            <summary>
            Data transfer object for resource group update.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.ResourceGroups.UpdateResourceGroup.UpdateResourceGroupCommand.Name">
            <summary>
            Name of resource group.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.ResourceGroups.UpdateResourceGroup.UpdateResourceGroupCommand.Description">
            <summary>
            Description of resource group.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.UpdateResourceGroup.UpdateResourceGroupCommandHandler">
            <summary>
            Handles the update of the resource group.
            </summary>
            <param name="ResourceGroupRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.UpdateResourceGroup.UpdateResourceGroupCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.ContentManagement.ResourceGroup})">
            <summary>
            Handles the update of the resource group.
            </summary>
            <param name="ResourceGroupRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.ContentManagement.ResourceGroups.UpdateResourceGroup.UpdateResourceGroupCommandHandler.ResourceGroupRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.UpdateResourceGroup.UpdateResourceGroupCommandHandler.Handle(Milvonion.Application.Features.ContentManagement.ResourceGroups.UpdateResourceGroup.UpdateResourceGroupCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.UpdateResourceGroup.UpdateResourceGroupCommandValidator">
            <summary>
            Query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.ContentManagement.ResourceGroups.UpdateResourceGroup.UpdateResourceGroupCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.ContentManagement.ResourceGroups.UpdateResourceGroup.UpdateResourceGroupCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Languages.GetLanguageList.GetLanguageListQuery">
            <summary>
            Data transfer object for language list.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Languages.GetLanguageList.GetLanguageListQueryHandler">
            <summary>
            Handles the language list operation.
            </summary>
            <param name="languageRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Languages.GetLanguageList.GetLanguageListQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.Language})">
            <summary>
            Handles the language list operation.
            </summary>
            <param name="languageRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Languages.GetLanguageList.GetLanguageListQueryHandler.Handle(Milvonion.Application.Features.Languages.GetLanguageList.GetLanguageListQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Languages.GetLanguageList.GetLanguageListQueryValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Languages.GetLanguageList.GetLanguageListQueryValidator.#ctor">
            <inheritdoc cref="T:Milvonion.Application.Features.Languages.GetLanguageList.GetLanguageListQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Languages.UpdateLanguage.UpdateLanguageCommand">
            <summary>
            Data transfer object for role update.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Languages.UpdateLanguage.UpdateLanguageCommand.IsDefault">
            <summary>
            Determines whether language is default or not.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Languages.UpdateLanguage.UpdateLanguageCommand.Supported">
            <summary>
            Determines whether language is supported or not.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Languages.UpdateLanguage.UpdateLanguageCommandHandler">
            <summary>
            Handles the update of the language.
            </summary>
            <param name="LanguageRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Languages.UpdateLanguage.UpdateLanguageCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.Language})">
            <summary>
            Handles the update of the language.
            </summary>
            <param name="LanguageRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.Languages.UpdateLanguage.UpdateLanguageCommandHandler.LanguageRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.Languages.UpdateLanguage.UpdateLanguageCommandHandler.Handle(Milvonion.Application.Features.Languages.UpdateLanguage.UpdateLanguageCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Languages.UpdateLanguage.UpdateLanguageCommandValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Languages.UpdateLanguage.UpdateLanguageCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Roles.UpdateRole.UpdateRoleCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Pages.GetPageAccessibilityForCurrentUser.GetPageAccessibilityForCurrentUserQuery">
            <summary>
            Data transfer object for page details.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Pages.GetPageAccessibilityForCurrentUser.GetPageAccessibilityForCurrentUserQuery.PageName">
            <summary>
            Page name where you want to access the information.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Pages.GetPageAccessibilityForCurrentUser.GetPageAccessibilityForCurrentUserQueryHandler">
            <summary>
            Handles the page detail operation.
            </summary>
            <param name="uiService"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Pages.GetPageAccessibilityForCurrentUser.GetPageAccessibilityForCurrentUserQueryHandler.#ctor(Milvonion.Application.Interfaces.IUIService)">
            <summary>
            Handles the page detail operation.
            </summary>
            <param name="uiService"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Pages.GetPageAccessibilityForCurrentUser.GetPageAccessibilityForCurrentUserQueryHandler.Handle(Milvonion.Application.Features.Pages.GetPageAccessibilityForCurrentUser.GetPageAccessibilityForCurrentUserQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Pages.GetPageAccessibilityForCurrentUser.GetPageAccessibilityForCurrentUserQueryValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Pages.GetPageAccessibilityForCurrentUser.GetPageAccessibilityForCurrentUserQueryValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Pages.GetPageAccessibilityForCurrentUser.GetPageAccessibilityForCurrentUserQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Permissions.GetPermissionList.GetPermissionListQuery">
            <summary>
            Data transfer object for permission details.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Permissions.GetPermissionList.GetPermissionListQueryHandler">
            <summary>
            Handles the permission list operation.
            </summary>
            <param name="permissionRepository"></param>
            <param name="milvaLocalizer"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Permissions.GetPermissionList.GetPermissionListQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.Permission},Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <summary>
            Handles the permission list operation.
            </summary>
            <param name="permissionRepository"></param>
            <param name="milvaLocalizer"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Permissions.GetPermissionList.GetPermissionListQueryHandler.Handle(Milvonion.Application.Features.Permissions.GetPermissionList.GetPermissionListQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Permissions.GetPermissionList.GetPermissionListQueryValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Permissions.GetPermissionList.GetPermissionListQueryValidator.#ctor">
            <inheritdoc cref="T:Milvonion.Application.Features.Permissions.GetPermissionList.GetPermissionListQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.CreateRole.CreateRoleCommand">
            <summary>
            Data transfer object for role creation.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Roles.CreateRole.CreateRoleCommand.Name">
            <summary>
            Name of role. (e.g. Viewer, Support, Developer)
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Roles.CreateRole.CreateRoleCommand.PermissionIdList">
            <summary>
            Role's permission id list.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.CreateRole.CreateRoleCommandHandler">
            <summary>
            Handles the creation of the role.
            </summary>
            <param name="RoleRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.CreateRole.CreateRoleCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.Role})">
            <summary>
            Handles the creation of the role.
            </summary>
            <param name="RoleRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.Roles.CreateRole.CreateRoleCommandHandler.RoleRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.CreateRole.CreateRoleCommandHandler.Handle(Milvonion.Application.Features.Roles.CreateRole.CreateRoleCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.CreateRole.CreateRoleCommandValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.CreateRole.CreateRoleCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Roles.CreateRole.CreateRoleCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.DeleteRole.DeleteRoleCommand">
            <summary>
            Data transfer object for role deletion.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Roles.DeleteRole.DeleteRoleCommand.RoleId">
            <summary>
            Id of the role to be deleted.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.DeleteRole.DeleteRoleCommandHandler">
            <summary>
            Handles the deletion of the role.
            </summary>
            <param name="RoleRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.DeleteRole.DeleteRoleCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.Role})">
            <summary>
            Handles the deletion of the role.
            </summary>
            <param name="RoleRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.Roles.DeleteRole.DeleteRoleCommandHandler.RoleRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.DeleteRole.DeleteRoleCommandHandler.Handle(Milvonion.Application.Features.Roles.DeleteRole.DeleteRoleCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.DeleteRole.DeleteRoleCommandValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.DeleteRole.DeleteRoleCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Roles.DeleteRole.DeleteRoleCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.GetRoleDetail.GetRoleDetailQuery">
            <summary>
            Data transfer object for role details.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Roles.GetRoleDetail.GetRoleDetailQuery.RoleId">
            <summary>
            Role id to access details.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.GetRoleDetail.GetRoleDetailQueryHandler">
            <summary>
            Handles the role detail operation.
            </summary>
            <param name="roleRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.GetRoleDetail.GetRoleDetailQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.Role})">
            <summary>
            Handles the role detail operation.
            </summary>
            <param name="roleRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.GetRoleDetail.GetRoleDetailQueryHandler.Handle(Milvonion.Application.Features.Roles.GetRoleDetail.GetRoleDetailQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.GetRoleDetail.GetRoleDetailQueryValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.GetRoleDetail.GetRoleDetailQueryValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Roles.GetRoleDetail.GetRoleDetailQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.GetRoleList.GetRoleListQuery">
            <summary>
            Data transfer object for role list.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.GetRoleList.GetRoleListQueryHandler">
            <summary>
            Handles the role list operation.
            </summary>
            <param name="roleRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.GetRoleList.GetRoleListQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.Role})">
            <summary>
            Handles the role list operation.
            </summary>
            <param name="roleRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.GetRoleList.GetRoleListQueryHandler.Handle(Milvonion.Application.Features.Roles.GetRoleList.GetRoleListQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.GetRoleList.GetRoleListQueryValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.GetRoleList.GetRoleListQueryValidator.#ctor">
            <inheritdoc cref="T:Milvonion.Application.Features.Roles.GetRoleList.GetRoleListQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.UpdateRole.UpdateRoleCommand">
            <summary>
            Data transfer object for role update.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Roles.UpdateRole.UpdateRoleCommand.Name">
            <summary>
            Name of role.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Roles.UpdateRole.UpdateRoleCommand.PermissionIdList">
            <summary>
            Related entities will always be updated according to the values ​​in this list. If you send it empty, related entities will be cleared. 
            If no update has been made, please send it with isUpdated false.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.UpdateRole.UpdateRoleCommandHandler">
            <summary>
            Handles the update of the role.
            </summary>
            <param name="RoleRepository"></param>
            <param name="RolePermissionRelationRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.UpdateRole.UpdateRoleCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.Role},Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.RolePermissionRelation})">
            <summary>
            Handles the update of the role.
            </summary>
            <param name="RoleRepository"></param>
            <param name="RolePermissionRelationRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.Roles.UpdateRole.UpdateRoleCommandHandler.RoleRepository">
            <summary></summary>
        </member>
        <member name="P:Milvonion.Application.Features.Roles.UpdateRole.UpdateRoleCommandHandler.RolePermissionRelationRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.UpdateRole.UpdateRoleCommandHandler.Handle(Milvonion.Application.Features.Roles.UpdateRole.UpdateRoleCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Roles.UpdateRole.UpdateRoleCommandValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Roles.UpdateRole.UpdateRoleCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Roles.UpdateRole.UpdateRoleCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Users.CreateUser.CreateUserCommand">
            <summary>
            Data transfer object for user creation.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.CreateUser.CreateUserCommand.UserType">
            <summary>
            Type of user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.CreateUser.CreateUserCommand.UserName">
            <summary>
            Unique username of the user. (e.g. johndoe)
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.CreateUser.CreateUserCommand.Email">
            <summary>
            Email of user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.CreateUser.CreateUserCommand.Name">
            <summary>
            Name of the user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.CreateUser.CreateUserCommand.Surname">
            <summary>
            Surname of the user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.CreateUser.CreateUserCommand.Password">
            <summary>
            Password of the user.    
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.CreateUser.CreateUserCommand.RoleIdList">
            <summary>
            The id list of the role the user will be assigned to.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Users.CreateUser.CreateUserCommandHandler">
            <summary>
            Handles the creation of the user.
            </summary>
            <param name="UserRepository"></param>
            <param name="UserManager"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Users.CreateUser.CreateUserCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.User},Milvasoft.Identity.Abstract.IMilvaUserManager{Milvonion.Domain.User,System.Int32})">
            <summary>
            Handles the creation of the user.
            </summary>
            <param name="UserRepository"></param>
            <param name="UserManager"></param>
        </member>
        <member name="P:Milvonion.Application.Features.Users.CreateUser.CreateUserCommandHandler.UserRepository">
            <summary></summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.CreateUser.CreateUserCommandHandler.UserManager">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.Users.CreateUser.CreateUserCommandHandler.Handle(Milvonion.Application.Features.Users.CreateUser.CreateUserCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Users.CreateUser.CreateUserCommandValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Users.CreateUser.CreateUserCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Users.CreateUser.CreateUserCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Users.DeleteUser.DeleteUserCommand">
            <summary>
            Data transfer object for user deletion.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.DeleteUser.DeleteUserCommand.UserId">
            <summary>
            Id of the user to be deleted.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Users.DeleteUser.DeleteUserCommandHandler">
            <summary>
            Handles the deletion of the user.
            </summary>
            <param name="UserRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Users.DeleteUser.DeleteUserCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.User})">
            <summary>
            Handles the deletion of the user.
            </summary>
            <param name="UserRepository"></param>
        </member>
        <member name="P:Milvonion.Application.Features.Users.DeleteUser.DeleteUserCommandHandler.UserRepository">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.Users.DeleteUser.DeleteUserCommandHandler.Handle(Milvonion.Application.Features.Users.DeleteUser.DeleteUserCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Users.DeleteUser.DeleteUserCommandValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Users.DeleteUser.DeleteUserCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Users.DeleteUser.DeleteUserCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Users.GetUserDetail.GetUserDetailQuery">
            <summary>
            Data transfer object for user details.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.GetUserDetail.GetUserDetailQuery.UserId">
            <summary>
            Id of the user whose details will be accessed.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Users.GetUserDetail.GetUserDetailQueryHandler">
            <summary>
            Handles the user detail operation.
            </summary>
            <param name="userRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Users.GetUserDetail.GetUserDetailQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.User})">
            <summary>
            Handles the user detail operation.
            </summary>
            <param name="userRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Users.GetUserDetail.GetUserDetailQueryHandler.Handle(Milvonion.Application.Features.Users.GetUserDetail.GetUserDetailQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Users.GetUserDetail.GetUserDetailQueryValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Users.GetUserDetail.GetUserDetailQueryValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Users.GetUserDetail.GetUserDetailQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Users.GetUserList.GetUserListQuery">
            <summary>
            Data transfer object for user list.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Users.GetUserList.GetUserListQueryHandler">
            <summary>
            Handles the user list operation.
            </summary>
            <param name="userRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Users.GetUserList.GetUserListQueryHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.User})">
            <summary>
            Handles the user list operation.
            </summary>
            <param name="userRepository"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Users.GetUserList.GetUserListQueryHandler.Handle(Milvonion.Application.Features.Users.GetUserList.GetUserListQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Users.GetUserList.GetUserListQueryValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Users.GetUserList.GetUserListQueryValidator.#ctor">
            <inheritdoc cref="T:Milvonion.Application.Features.Users.GetUserList.GetUserListQueryValidator"/>
        </member>
        <member name="T:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommand">
            <summary>
            Data transfer object for user update.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommand.Name">
            <summary>
            Name of user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommand.Surname">
            <summary>
            Surname of user.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommand.Lockout">
            <summary>
            If the user enters the wrong password repeatedly, the account will be locked for a certain period of time. 
            If this lock is to be removed, false should be sent, if this lock is to be placed on the user for a certain period of time, true should be sent.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommand.NewPassword">
            <summary>
            If a new password is to be assigned to the user, this field should be sent.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommand.RoleIdList">
            <summary>
            Related entities will always be updated according to the values ​​in this list. If you send it empty, related entities will be cleared. 
            If no update has been made, please send it with isUpdated false.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommandHandler">
            <summary>
            Handles the update of the user.
            </summary>
            <param name="UserRepository"></param>
            <param name="UserRoleRelationRepository"></param>
            <param name="UserSessionRepository"></param>
            <param name="UserSessionHistoriesRepository"></param>
            <param name="MilvaIdentityOptions"></param>
            <param name="MilvaUserManager"></param>
            <param name="MilvaPasswordHasher"></param>
        </member>
        <member name="M:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommandHandler.#ctor(Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.User},Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.UserRoleRelation},Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.UserSession},Milvonion.Application.Interfaces.IMilvonionRepositoryBase{Milvonion.Domain.UserSessionHistory},System.Lazy{Milvasoft.Identity.Concrete.Options.MilvaIdentityOptions},System.Lazy{Milvasoft.Identity.Abstract.IMilvaUserManager{Milvonion.Domain.User,System.Int32}},System.Lazy{Milvasoft.Identity.Abstract.IMilvaPasswordHasher})">
            <summary>
            Handles the update of the user.
            </summary>
            <param name="UserRepository"></param>
            <param name="UserRoleRelationRepository"></param>
            <param name="UserSessionRepository"></param>
            <param name="UserSessionHistoriesRepository"></param>
            <param name="MilvaIdentityOptions"></param>
            <param name="MilvaUserManager"></param>
            <param name="MilvaPasswordHasher"></param>
        </member>
        <member name="P:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommandHandler.UserRepository">
            <summary></summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommandHandler.UserRoleRelationRepository">
            <summary></summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommandHandler.UserSessionRepository">
            <summary></summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommandHandler.UserSessionHistoriesRepository">
            <summary></summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommandHandler.MilvaIdentityOptions">
            <summary></summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommandHandler.MilvaUserManager">
            <summary></summary>
        </member>
        <member name="P:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommandHandler.MilvaPasswordHasher">
            <summary></summary>
        </member>
        <member name="M:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommandHandler.Handle(Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommandValidator">
            <summary>
            Account detail query validations. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommandValidator.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <inheritdoc cref="T:Milvonion.Application.Features.Users.UpdateUser.UpdateUserCommandValidator"/>
        </member>
        <member name="T:Milvonion.Application.Interfaces.IAccountManager">
            <summary>
            Account manager for user account operations.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IAccountManager.LoginAsync(Milvonion.Domain.User,System.String,System.Threading.CancellationToken)">
            <summary>
            User login operation.
            It updates sessions in database.
            Generates access and refresh tokens.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IAccountManager.GenerateToken(Milvonion.Domain.User,System.Nullable{System.DateTime})">
            <summary>
            Generates token for ci user.
            Generates access token.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Milvonion.Application.Interfaces.IDeveloperService">
            <summary>
            Developer service.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IDeveloperService.ResetDatabaseAsync">
            <summary>
            Remove, recreates and seed database for development purposes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IDeveloperService.SeedDevelopmentDataAsync">
            <summary>
            Seeds data for development purposes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IDeveloperService.SeedFakeDataAsync(System.Boolean,System.String)">
            <summary>
            Seeds fake data.
            </summary>
            <param name="sameData"></param>
            <param name="locale"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IDeveloperService.InitDatabaseAsync">
            <summary>
            Initial migration operation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IDeveloperService.ResetUIRelatedDataAsync">
            <summary>
            Resets ui related data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IDeveloperService.GetMethodLogsAsync(Milvasoft.Components.Rest.Request.ListRequest)">
            <summary>
            Gets method logs.
            </summary>
            <param name="listRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IDeveloperService.GetApiLogsAsync(Milvasoft.Components.Rest.Request.ListRequest)">
            <summary>
            Gets api logs.
            </summary>
            <param name="listRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IDeveloperService.ExportExistingDataAsync">
            <summary>
            Exports existing data to a JSON file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IDeveloperService.ImportExistingDataAsync">
            <summary>
            Imports existing data.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Milvonion.Application.Interfaces.IExportService">
            <summary>
            Used to export data. 
            </summary>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IExportService.DynamicExportToExcelAsync(Milvonion.Application.Dtos.ExportDtos.ExportRequest,System.Threading.CancellationToken)">
            <summary>
            Dynamically creates an excel file according to the export type.
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IExportService.ExportToExcel``1(Milvasoft.Components.Rest.MilvaResponse.ListResponse{``0},System.String)">
            <summary>
            Exports the data to excel.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="response"></param>
            <param name="pageName"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IExportService.ExportToExcel(Milvasoft.Components.Rest.MilvaResponse.IHasMetadata,System.String)">
            <summary>
            Exports the data to excel.
            </summary>
            <param name="hasMetadataResponse"></param>
            <param name="pageName"></param>
            <returns></returns>
        </member>
        <member name="T:Milvonion.Application.Interfaces.ILookupService">
            <summary>
            Lookup service for getting dynamic entity fetch.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Interfaces.ILookupService.GetLookupsAsync(Milvasoft.DataAccess.EfCore.Utils.LookupModels.LookupRequest)">
            <summary>
            Dynamic entity fetch.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.ILookupService.GetEnumLookups(System.String)">
            <summary>
            Get enum names as localized.
            </summary>
            <param name="enumName"></param>
            <returns></returns>
        </member>
        <member name="T:Milvonion.Application.Interfaces.IMilvonionDbContextAccessor">
            <summary>
            Interface for MilvonionDbContextAccessor.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IMilvonionDbContextAccessor.GetDbContext">
            <summary>
            Get db context.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Milvonion.Application.Interfaces.IMilvonionRepositoryBase`1">
            <summary>
            Base repository for Milvonion.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:Milvonion.Application.Interfaces.IPermissionManager">
            <summary>
            Permission manager for managing system permissions.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IPermissionManager.GetAllPermissionsAsync(System.Threading.CancellationToken)">
            <summary>
            Get all permissions as entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IPermissionManager.MigratePermissionsAsync(System.Threading.CancellationToken)">
            <summary>
            Migrate permissions to the database.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Milvonion.Application.Interfaces.IUIService">
            <summary>
            Service for UI operations.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IUIService.GetAccessibleMenuItemsAsync(System.Collections.Generic.IEnumerable{Milvonion.Domain.Permission},System.Threading.CancellationToken)">
            <summary>
            Gets accessible menu items according to <paramref name="userPermissions"/>.
            </summary>
            <param name="userPermissions"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IUIService.GetAccessibleMenuItemsForCurrentUserAsync(System.Threading.CancellationToken)">
            <summary>
            Gets accessible menu items according to current user permissions.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IUIService.GetCurrentUserPageAccessibilityAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets page information by <paramref name="pageName"/>. 
            </summary>
            <param name="pageName"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IUIService.GetPagesAccessibilityAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Gets pages information. 
            </summary>
            <param name="userPermissions"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IUIService.GetCurrentUserPagesAccessibilityAsync(System.Threading.CancellationToken)">
            <summary>
            Gets pages information for current user. 
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Interfaces.IUIService.GetLocalizedContents">
            <summary>
            Gets localized contents related to UI.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Milvonion.Application.Utils.Aspects.UserActivityLogAspect.UserActivityLogInterceptor">
            <summary>
            Specifies that the method marked with this attribute will be added to as activity to database by the <see cref="T:Milvonion.Application.Utils.Aspects.UserActivityLogAspect.UserActivityLogInterceptor"/>.
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Milvonion.Application.Utils.Aspects.UserActivityLogAspect.UserActivityLogInterceptor.#ctor(System.IServiceProvider)">
            <summary>
            Specifies that the method marked with this attribute will be added to as activity to database by the <see cref="T:Milvonion.Application.Utils.Aspects.UserActivityLogAspect.UserActivityLogInterceptor"/>.
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="P:Milvonion.Application.Utils.Aspects.UserActivityLogAspect.UserActivityLogInterceptor.InterceptionOrder">
            <inheritdoc/>
        </member>
        <member name="M:Milvonion.Application.Utils.Aspects.UserActivityLogAspect.UserActivityLogInterceptor.OnInvoke(Milvasoft.Interception.Decorator.Call)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Utils.Attributes.AuthAttribute">
            <summary>
            Specifies that the method marked with this attribute will be added to as activity to database by the <see cref="T:Milvonion.Application.Utils.Aspects.UserActivityLogAspect.UserActivityLogInterceptor"/>.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Utils.Attributes.AuthAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Milvonion.Application.Utils.Attributes.AuthAttribute"/> class with <see cref="F:Milvonion.Application.Utils.PermissionManager.PermissionCatalog.App.SuperAdmin"/> role.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Utils.Attributes.AuthAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Milvonion.Application.Utils.Attributes.AuthAttribute"/> class with <see cref="F:Milvonion.Application.Utils.PermissionManager.PermissionCatalog.App.SuperAdmin"/> role and <paramref name="roles"/>.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Utils.Attributes.UserActivityTrackAttribute">
            <summary>
            Specifies that the method marked with this attribute will be added to as activity to database by the <see cref="T:Milvonion.Application.Utils.Aspects.UserActivityLogAspect.UserActivityLogInterceptor"/>.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Utils.Attributes.UserActivityTrackAttribute.#ctor(Milvonion.Domain.Enums.UserActivity)">
            <summary>
            Specifies that the method marked with this attribute will be added to as activity to database by the <see cref="T:Milvonion.Application.Utils.Aspects.UserActivityLogAspect.UserActivityLogInterceptor"/>.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Utils.Attributes.UserActivityTrackAttribute.Activity">
            <summary>
            Activity type.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Utils.Attributes.UserTypeAuthAttribute">
            <summary>
            Determines the type of user who can access the method.
            </summary>
            <param name="userType"></param>
        </member>
        <member name="M:Milvonion.Application.Utils.Attributes.UserTypeAuthAttribute.#ctor(Milvonion.Domain.Enums.UserType)">
            <summary>
            Determines the type of user who can access the method.
            </summary>
            <param name="userType"></param>
        </member>
        <member name="M:Milvonion.Application.Utils.Attributes.UserTypeAuthAttribute.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Utils.Constants.GlobalConstant">
            <summary>
            Represents a class that contains global constants for the application.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.RoutePrefix">
            <summary>
            Route prefix of api.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.RouteBase">
            <summary>
            Base route path of api.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.FullRoute">
            <summary>
            Full route path of api. It includes <see cref="F:Milvonion.Application.Utils.Constants.GlobalConstant.RouteBase"/> and controller name. 
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.WWWRoot">
            <summary>
            Root directory path. 
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.HealthCheckPath">
            <summary>
            Health check path. 
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.HealthCheckUIPath">
            <summary>
            Health check ui path. 
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.HealthCheckWebHookPath">
            <summary>
            Health check ui path. 
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.HealthCheckResourcesPath">
            <summary>
            Health check resources path. 
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.Http">
            <summary>
            http string.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.Https">
            <summary>
            https string.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.LocalizationResourcesFolderName">
            <summary>
            Localization resources folder name.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.ResourcesFolderName">
            <summary>
            Resources folder name.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Utils.Constants.GlobalConstant.RootPath">
            <summary>
            Rootpath of application.  
            </summary>
        </member>
        <member name="P:Milvonion.Application.Utils.Constants.GlobalConstant.SqlFilesPath">
            <summary>
            SQL folder path.  
            </summary>
        </member>
        <member name="P:Milvonion.Application.Utils.Constants.GlobalConstant.JsonFilesPath">
            <summary>
            SQL folder path.  
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.DefaultApiVersion">
            <summary>
            Default api version.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.CurrentApiVersion">
            <summary>
            Default api version.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.CustomForbidSchema">
            <summary>
            Custom forbid scheme for super admin.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.LoggingActivityName">
            <summary>
            Logging activity name for activity starter interception.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Utils.Constants.GlobalConstant.CurrentEnvironment">
            <summary>
            Gets or sets the current environment.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.UserTypeClaimName">
            <summary>
            UserType claim name.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.IgnoreResponseLoggingItemsKey">
            <summary>
            Response logging ignore httpcontext items key.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.RootUsername">
            <summary>
            Root user name.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.SystemUsername">
            <summary>
            System user name.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.GenerateMetadataHeaderKey">
            <summary>
            Generate metadata header key.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.ContentDispositionHeaderKey">
            <summary>
            Generate metadata header key.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.RealIpHeaderKey">
            <summary>
            X-Real-IP header key.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.DownloadEnpointPathEnd">
            <summary>
            Generate metadata header key.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.DefaultIp">
            <summary>
            Default ip.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.UrlStartSegment">
            <summary>
            Url start segment.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Constants.GlobalConstant.CurrentUserPermissionsKey">
            <summary>
            Current user permissions http context items key.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Utils.Constants.GlobalConstant.ContentDispositionIgnores">
            <summary>
            Ignored content disposition parts.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Utils.Constants.GlobalConstant.UIPaths">
            <summary>
            UI request paths.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Utils.Constants.LogTemplate">
            <summary>
            Represents a class that contains global constants for the application.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Utils.Constants.MessageConstant">
            <summary>
            Represents a class that contains global constants for the application.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Utils.Constants.MessageKey">
            <summary>
            Represents a class that contains global constants for the application.
            </summary>
        </member>
        <member name="T:Milvonion.Application.Utils.Extensions.MilvonionExtensions">
            <summary>
            Contains extension methods for the Opsiyon.
            </summary>
            <summary>
            Contains extension methods for the Milvonion.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.GetTokenFromHeader(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Gets token from header via HttpContextAccessor.
            </summary>
            <param name="httpContextAccessor"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.GetTokenFromHeader(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Gets token from header via HttpContext.
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.IsCurrentUser(Microsoft.AspNetCore.Http.IHttpContextAccessor,System.String)">
            <summary>
            Checks whether the current user is the user whose name is given as a parameter via HttpContext.
            </summary>
            <param name="httpContextAccessor"></param>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.CurrentUserName(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Gets current user name via HttpContextAccessor.
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.GetCurrentUserType(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Get current user type from claims.
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.GetCurrentUserPermissions(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Get current user permissions from claims.
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.GetCurrentUserClaims(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Checks whether the current user is the user whose name is given as a parameter via HttpContext.
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.ThrowIfCurrentUserNotAuthorized(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.List{System.String})">
            <summary>
            Throws an exception if the current user does not have the required permissions.
            </summary>
            <param name="httpContext"></param>
            <param name="permissions"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.GetIpAddress(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Gets the IP address of the client.
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.ThrowWithUnauthorized(Microsoft.AspNetCore.Http.HttpResponse,System.String)">
            <summary>
            Sets the status code of the response to 401.
            </summary>
            <param name="response"></param>
            <param name="messageKey"></param>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.ThrowWithForbidden(Microsoft.AspNetCore.Http.HttpResponse,System.String)">
            <summary>
            Sets the status code of the response to 403.
            </summary>
            <param name="response"></param>
            <param name="messageKey"></param>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.ThrowWithSessionTimeout(Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
            Sets the status code of the response to 419.
            </summary>
            <param name="response"></param>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.CreateRequestUrl(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Makes reques url from requested params.For more detailed information of URL Sections, please refer to the remarks section where the method is described.
            </summary>
            <param name="protocol"></param>
            <param name="hostName"></param>
            <param name="port"></param>
            <param name="pathName"></param>
            <param name="query"></param>
            <param name="hash"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.GetCurrentEnvironment">
            <summary>
            Gets current environment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.IsCurrentEnvProduction">
            <summary>
            Checks if the current environment is production.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.GenerateMetadata(System.IServiceProvider)">
            <summary>
            Generates metadata for the request according to header.
            </summary>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.ToLowerAndNonSpacingUnicode(System.String)">
            <summary>
            Converts the input string to lowercase and removes diacritics (accents) from characters.
            </summary>
            <param name="input">The input string to be converted.</param>
            <returns>The converted string with lowercase letters and no diacritics.</returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.IsBase64StringValidLength(System.String)">
            <summary>
            Calculates base 64 string length and returns whether it is valid.
            </summary>
            <param name="base64String"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.IsBase64StringHasValidFileExtension(System.String)">
            <summary>
            Validates the base64 string by checking the file extension.
            </summary>
            <param name="base64String"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.IsValidDataUri(System.String)">
            <summary>
            Determines whether the given string is a valid data uri base64 format.
            </summary>
            <param name="dataUri"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.DataUriToPlainText(System.String)">
            <summary>
            Converts data uri base64 string to plain text base64 string.
            </summary>
            <param name="dataUriBase64"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.DataUriRegex">
            <remarks>
            Pattern:<br/>
            <code>^data:(?&lt;mediatype&gt;[\\w/+.-]+);base64,(?&lt;data&gt;[a-zA-Z0-9+/]+={0,2})$</code><br/>
            Explanation:<br/>
            <code>
            ○ Match if at the beginning of the string.<br/>
            ○ Match the string "data:".<br/>
            ○ "mediatype" capture group.<br/>
                ○ Match a character in the set [+--/\w] atomically at least once.<br/>
            ○ Match the string ";base64,".<br/>
            ○ "data" capture group.<br/>
                ○ Match a character in the set [+/-9A-Za-z] atomically at least once.<br/>
                ○ Match '=' atomically at most 2 times.<br/>
            ○ Match if at the end of the string or if before an ending newline.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.ReplaceAndToLowerRegex">
            <remarks>
            Pattern:<br/>
            <code>\\s+</code><br/>
            Explanation:<br/>
            <code>
            ○ Match a whitespace character atomically at least once.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.MilvonionExtensions.UrlRegex">
            <remarks>
            Pattern:<br/>
            <code>^(ht|f)tp(s?)\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\'\\/\\\\\\+&amp;%\\$#_]*)?$</code><br/>
            Explanation:<br/>
            <code>
            ○ Match if at the beginning of the string.<br/>
            ○ 1st capture group.<br/>
                ○ Match with 2 alternative expressions.<br/>
                    ○ Match the string "ht".<br/>
                    ○ Match 'f'.<br/>
            ○ Match the string "tp".<br/>
            ○ 2nd capture group.<br/>
                ○ Match 's' atomically, optionally.<br/>
            ○ Match the string "://".<br/>
            ○ Match a character in the set [0-9A-Za-z].<br/>
            ○ Loop greedily any number of times.<br/>
                ○ 3rd capture group.<br/>
                    ○ Match a character in the set [-.\w] greedily any number of times.<br/>
                    ○ Match a character in the set [0-9A-Za-z].<br/>
            ○ Loop greedily any number of times.<br/>
                ○ 4th capture group.<br/>
                    ○ Match ':'.<br/>
                    ○ Loop greedily any number of times.<br/>
                        ○ 5th capture group.<br/>
                            ○ Match the string "0-9".<br/>
            ○ 6th capture group.<br/>
                ○ Match '/' greedily, optionally.<br/>
            ○ Optional (greedy).<br/>
                ○ 7th capture group.<br/>
                    ○ Match a character in the set [#-'+-9?A-Z\\_a-z] greedily any number of times.<br/>
            ○ Match if at the end of the string or if before an ending newline.<br/>
            </code>
            </remarks>
        </member>
        <member name="T:Milvonion.Application.Utils.Extensions.FileHelper">
            <summary>
            File helpers.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Utils.Extensions.FileHelper.FileSignatures">
            <summary>
            Source: https://en.wikipedia.org/wiki/List_of_file_signatures
            To read the first bytes of a file you can use the following command on UNIX systems: od -t x1 -N 10 filename
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Extensions.FileHelper.IpaExtension">
            <summary>
            ipa file extension.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Extensions.FileHelper.ApkExtension">
            <summary>
            apk file extension.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.FileHelper.GetBoundary(Microsoft.Net.Http.Headers.MediaTypeHeaderValue,System.Int32)">
            <summary>
            Gets boundary from content type.
            </summary>
            <param name="contentType"></param>
            <param name="lengthLimit"></param>
            <returns></returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.FileHelper.GetEncoding(Microsoft.AspNetCore.WebUtilities.MultipartSection)">
            <summary>
            Gets encoding from section.
            </summary>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.FileHelper.HasFileContentDisposition(Microsoft.Net.Http.Headers.ContentDispositionHeaderValue)">
            <summary>
            Checks if content disposition has file.
            </summary>
            <param name="contentDisposition"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.FileHelper.HasFormDataContentDisposition(Microsoft.Net.Http.Headers.ContentDispositionHeaderValue)">
            <summary>
            Cheks form data has content disposition.
            </summary>
            <param name="contentDisposition"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.FileHelper.GetFileExtension(System.String)">
            <summary>
            Gets file extension from file path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.FileHelper.GetFileNameWithoutExtension(System.String)">
            <summary>
            Gets file name without extension from file path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.FileHelper.GetFileName(System.String)">
            <summary>
            Gets file name with extension from file path.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Milvonion.Application.Utils.Extensions.FileHelper.MimeTypeHelper">
            <summary>
            Mime type helper
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Extensions.FileHelper.MimeTypeHelper.ApplicationApk">
            <summary>
            .apk mime type.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.Extensions.FileHelper.MimeTypeHelper.ApplicationIpa">
            <summary>
            .ipa mime type.
            </summary>
        </member>
        <member name="P:Milvonion.Application.Utils.Extensions.FileHelper.MimeTypeHelper.ExtensionMimeTypePairs">
            <summary>
            File extension mime type pairs.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Utils.Extensions.FileHelper.MimeTypeHelper.GetMimeType(System.String)">
            <summary>
            Gets mime type from file extension.
            </summary>
            <param name="fileExtension"></param>
            <returns></returns>
        </member>
        <member name="T:Milvonion.Application.Utils.LinkedWithFormatters.ByteArrayToBase64Formatter">
            <summary>
            Converts byte array to base64 string.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.LinkedWithFormatters.ByteArrayToBase64Formatter.FormatterName">
            <inheritdoc/>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.ByteArrayToBase64Formatter.Format(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Utils.LinkedWithFormatters.EnumFormatter`1">
            <summary>
            Converts enum value to its localized display name.
            </summary>
            <typeparam name="TEnum"></typeparam>
            <param name="milvaLocalizer"></param>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.EnumFormatter`1.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <summary>
            Converts enum value to its localized display name.
            </summary>
            <typeparam name="TEnum"></typeparam>
            <param name="milvaLocalizer"></param>
        </member>
        <member name="F:Milvonion.Application.Utils.LinkedWithFormatters.EnumFormatter`1.FormatterName">
            <inheritdoc/>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.EnumFormatter`1.Format(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Utils.LinkedWithFormatters.ExistsNotFormatter">
            <summary>
            Converts boolean value to Exists or NotExists.
            </summary>
            <param name="milvaLocalizer"></param>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.ExistsNotFormatter.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <summary>
            Converts boolean value to Exists or NotExists.
            </summary>
            <param name="milvaLocalizer"></param>
        </member>
        <member name="P:Milvonion.Application.Utils.LinkedWithFormatters.ExistsNotFormatter.FormatterName">
            <inheritdoc/>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.ExistsNotFormatter.Format(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Utils.LinkedWithFormatters.FormatterServiceCollectionExtensions">
            <summary>
            Formatter service collection extensions.
            </summary>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.FormatterServiceCollectionExtensions.AddLinkedWithFormatters(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly[])">
            <summary>
            Add linked with formatters to service collection.
            </summary>
            <param name="services"></param>
            <param name="assemblies"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.FormatterServiceCollectionExtensions.AddFetchers(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add linked with formatters to service collection.
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.FormatterServiceCollectionExtensions.AddEnumFormatters(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly[])">
            <summary>
            Finds enums in assemblies and adds their enum formatters to the service collection.
            </summary>
            <param name="services"></param>
            <param name="assemblies"></param>
            <returns></returns>
        </member>
        <member name="T:Milvonion.Application.Utils.LinkedWithFormatters.LanguageIdNameFormatter">
            <summary>
            Gets language name by language id from static language list via multi language manager.
            </summary>
        </member>
        <member name="F:Milvonion.Application.Utils.LinkedWithFormatters.LanguageIdNameFormatter.FormatterName">
            <inheritdoc/>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.LanguageIdNameFormatter.Format(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Utils.LinkedWithFormatters.LookupFetcher">
            <summary>
            Lookup options fetcher.
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.LookupFetcher.#ctor(System.IServiceProvider)">
            <summary>
            Lookup options fetcher.
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="F:Milvonion.Application.Utils.LinkedWithFormatters.LookupFetcher.FetcherName">
            <inheritdoc/>
        </member>
        <member name="P:Milvonion.Application.Utils.LinkedWithFormatters.LookupFetcher.IsAsync">
            <inheritdoc/>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.LookupFetcher.Fetch(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.LookupFetcher.FetchAsync(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Utils.LinkedWithFormatters.PageNameTranslateFormatter">
            <summary>
            Converts boolean value to Yes or No.
            </summary>
            <param name="milvaLocalizer"></param>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.PageNameTranslateFormatter.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <summary>
            Converts boolean value to Yes or No.
            </summary>
            <param name="milvaLocalizer"></param>
        </member>
        <member name="F:Milvonion.Application.Utils.LinkedWithFormatters.PageNameTranslateFormatter.FormatterName">
            <inheritdoc/>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.PageNameTranslateFormatter.Format(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Milvonion.Application.Utils.LinkedWithFormatters.YesNoFormatter">
            <summary>
            Converts boolean value to Yes or No.
            </summary>
            <param name="milvaLocalizer"></param>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.YesNoFormatter.#ctor(Milvasoft.Core.Abstractions.Localization.IMilvaLocalizer)">
            <summary>
            Converts boolean value to Yes or No.
            </summary>
            <param name="milvaLocalizer"></param>
        </member>
        <member name="F:Milvonion.Application.Utils.LinkedWithFormatters.YesNoFormatter.FormatterName">
            <inheritdoc/>
        </member>
        <member name="M:Milvonion.Application.Utils.LinkedWithFormatters.YesNoFormatter.Format(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Milvonion.Application.Utils.PermissionManager.PermissionCatalog.GetPermissionsAndGroups">
            <summary>
            Gets all permissions in the system as grouped by permission group.
            </summary>
            <returns> Permission group and group's permissions pair. </returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.DataUriRegex_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the DataUriRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.DataUriRegex_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.DataUriRegex_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.DataUriRegex_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.DataUriRegex_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.DataUriRegex_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.DataUriRegex_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.DataUriRegex_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.DataUriRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ReplaceAndToLowerRegex_1">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the ReplaceAndToLowerRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.ReplaceAndToLowerRegex_1.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ReplaceAndToLowerRegex_1.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ReplaceAndToLowerRegex_1.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ReplaceAndToLowerRegex_1.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ReplaceAndToLowerRegex_1.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ReplaceAndToLowerRegex_1.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ReplaceAndToLowerRegex_1.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ReplaceAndToLowerRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.UrlRegex_2">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the UrlRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.UrlRegex_2.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.UrlRegex_2.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.UrlRegex_2.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.UrlRegex_2.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.UrlRegex_2.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.UrlRegex_2.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.UrlRegex_2.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.UrlRegex_2.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPop(System.Int32[],System.Int32@,System.Int32@,System.Int32@)">
            <summary>Pops 2 values from the backtracking stack.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32)">
            <summary>Pushes 1 value onto the backtracking stack.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32)">
            <summary>Pushes 2 values onto the backtracking stack.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32,System.Int32)">
            <summary>Pushes 3 values onto the backtracking stack.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_asciiLettersAndDigits">
            <summary>Supports searching for characters in or not in "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_ascii_88FF03FEFFFF07FEFFFF07">
            <summary>Supports searching for characters in or not in "+/0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_ascii_F8F8FF83FEFFFF97FEFFFF07">
            <summary>Supports searching for characters in or not in "#$%&amp;'+,-./0123456789?ABCDEFGHIJKLMNOPQRSTUVWXYZ\\_abcdefghijklmnopqrstuvwxyz".</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_whitespace">
            <summary>Supports searching for characters in or not in "\t\n\v\f\r \u0085             \u2028\u2029  　".</summary>
        </member>
    </members>
</doc>
